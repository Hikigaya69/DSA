//Medium
//17/10/2024


You are given an integer num. You can swap two digits at most once to get the maximum valued number.

Return the maximum valued number you can get.


class Solution {
public:
    int maximumSwap(int num) {

       string number = to_string(num);

       int n=number.length();
       vector<int>maxRight(n); //stores the max elements index to the right of an digit 

       maxRight[n-1]=n-1;  //there is no max element for the last elemenr
                                   //ulta calculate jkaro
       for(int i=n-2;i>=0;i--)
       {
        int rightMaxIdx=maxRight[i+1];
        int rightMaxEle = number[rightMaxIdx];

          if(number[i]<=rightMaxEle)
          {
              maxRight[i]=rightMaxIdx;
          }else{
            maxRight[i]=i;
          }
       }

       for(int i=0;i<n;i++)
       {
        int maxRightIdx=maxRight[i];
        int maxRightElement = number[maxRightIdx];
        if(number[i]<maxRightElement){
            swap(number[i],number[maxRightIdx]);
            return stoi(number);
        }
       }

       return num;
       

        
    }
};
