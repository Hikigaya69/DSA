//Medium
//There are n soldiers standing in a line. Each soldier is assigned a unique rating value.
//You have to form a team of 3 soldiers amongst them under the following rules:
//Choose 3 soldiers with index (i, j, k) with rating (rating[i], rating[j], rating[k]).
//A team is valid if: (rating[i] < rating[j] < rating[k]) or (rating[i] > rating[j] > rating[k]) where (0 <= i < j < k < n).
//Return the number of teams you can form given the conditions. (soldiers can be part of multiple teams).


class Solution {
public:
    int numTeams(vector<int>& rating) {
       

        int teams=0;

        for(int j=1;j<rating.size()-1;j++){
        // for each j
        int countSmallerLeft=0;
        int countLargerLeft=0;
        int countSmallerRight=0;
        int countLargerRight=0;

            //leff ka count karooo

            for(int i=0;i<j;i++){
                if(rating[i]<rating[j]){
                    countSmallerLeft++;
                }else if(rating[i]>rating[j]){
                    countLargerLeft++;
                }
            
            }

            //right ka count karoo

            for(int k=j+1;k<rating.size();k++){
                if(rating[k]<rating[j]){
                    countSmallerRight++;
                }else if(rating[k]>rating[j]){
                    countLargerRight++;
                }

            }
            // math to calculate the number
             teams+=(countLargerLeft*countSmallerRight)+(countSmallerLeft*countLargerRight);
   

           
        } 
      return  teams;   
    
        
    }
};
